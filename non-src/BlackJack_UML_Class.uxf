<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="13.2">
  <zoom_level>5</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>10</x>
      <y>750</y>
      <w>125</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>ai.agents::ReflexAgent
--
+&lt;&lt;constructor&gt;&gt;ReflexAgent()
+offerRegularTurn(hand: Hand): Move</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>0</x>
      <y>0</y>
      <w>1160</w>
      <h>510</h>
    </coordinates>
    <panel_attributes>Game</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>210</x>
      <y>580</y>
      <w>255</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>&lt;&lt;abstract&gt;&gt;
ai.agents::BaseAgent
--
+name: String
-_purse: Double
-_hasDealerCardBeenPrinted: Boolean
--
+&lt;&lt;constructor&gt;&gt;BaseAgent(name: String)
+fatalErrorOccurred(e: Exception)
+handFinished(hand: Hand, gain: Double, result: Result, dealerCards: CardList)
+offerEarlySurrender(hand: Hand): boolean
/+offerRegularTurn(hand: Hand): Move/
_-formatCard(card: Card): String_
_#printCards(cards: CardList)_
_#printPoints(hand: Hand)_
-printDealerCard(hand: Hand)
#printDealerCardIfNeeded(hand: Hand)
#printPlayerCards(hand: Hand)

group=2</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>60</x>
      <y>715</y>
      <w>280</w>
      <h>45</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;
</panel_attributes>
    <additional_attributes>10.0;70.0;10.0;30.0;540.0;30.0;540.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>15</x>
      <y>420</y>
      <w>255</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
libs.blackjack.src.garrettsmith.blackjack::EventHandler
--
+fatalErrorOccurred(e: Exception)
+handFinished(hand: Hand, gain: Double, result: Result, dealerCards: CardList)
+offerEarlySurrender(hand: Hand): Boolean
+offerRegularTurn(hand: Hand): Move
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>5</x>
      <y>545</y>
      <w>770</w>
      <h>295</h>
    </coordinates>
    <panel_attributes>Agents
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>135</x>
      <y>475</y>
      <w>210</w>
      <h>115</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>400.0;210.0;400.0;100.0;10.0;100.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>25</x>
      <y>60</y>
      <w>160</w>
      <h>160</h>
    </coordinates>
    <panel_attributes>libs.blackjack.src.garrettsmith.playingcards::Card
--
-_suit: Suit
-_value: Value
-_color: Color
-_hashCode: int
--
+&lt;&lt;constructor&gt;&gt;Card()
+&lt;&lt;constructor&gt;&gt;Card(value: Value, suit: Suit)
+equals(object Object): Boolean
+getColor(): Color
+getSuit(): Suit
+getValue(): Value
+hashCode(): Integer
+toString(): String

{innerclass
_+Color_
innerclass}
{innerclass
_+Suit_
innerclass}
{innerclass
_+Value_
innerclass}
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>250</x>
      <y>60</y>
      <w>180</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>libs.blackjack.src.garrettsmith.playingcards::CardList
--
_-serialVersionUID: Long_
--
+&lt;&lt;constructor&gt;&gt;CardList()
+&lt;&lt;constructor&gt;&gt;CardList(capacity: Integer)
+&lt;&lt;constructor&gt;&gt;CardList(cards: CardList)
--
+add(o: Card): Boolean
+getCard(index: Integer): Card
+removeCard(i: Integer): Card</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>180</x>
      <y>70</y>
      <w>80</w>
      <h>15</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>140.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>305</x>
      <y>170</y>
      <w>340</w>
      <h>330</h>
    </coordinates>
    <panel_attributes>libs.blackjack.src.garrettsmith.blackjack::Hand
--
-_cards: CardList
-_blackjack: Blackjack
-_isPlayerDone: Boolean
-_isDealerPlayNeeded: Boolean
-_wager: Double
-_splitCounter: SplitCounter
-_isEvaluationNeeded: Boolean
--
~&lt;&lt;constructor&gt;&gt;Hand(wager: Double, blackjack: Blackjack, cards: CardList)
-&lt;&lt;constructor&gt;&gt;Hand(wager: Double, blackjack: Blackjack, newCards: CardList, splitCounter: SplitCounter)
+getBestValue(): Integer
+getValue(): Integer
+getCards(): CardList
+getDealerCard(): Card
+getDealerValue(): Integer
+isBusted(): Boolean
+isDoubleDownAllowd(): Boolean
+isStandAllowed(): Boolean
+getWager(): Double
+isMoveAllowed(move: Move): Boolea
+isHitAllowed(): Boolean
+isSoft(): Boolean
+isSplitAllowed(): Boolean
+toString(): String
+isSurrenderAllowed(): Boolean
~doubleDown() {throws NotAllowedException, NoMoreCardsException}
~isInPlay(): Boolean
~isEvaluationNeeded(): Boolean
~surrender()
~isDealerPlayNeeded(): Boolean
~getSplitCount(): Integer
~hit() {throws NotAllowedException, NoMoreCardsException}
~isPlayerDone(): Boolean
~split(): Hand
~stand() {throws NotAllowedException} 
~addCard()
-hasSplit(): Boolean

{innerclass
-SplitCounter
innerclass}</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>425</x>
      <y>70</y>
      <w>75</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>130.0;200.0;130.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>965</x>
      <y>300</y>
      <w>170</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
libs.blackjack.src.garrettsmith.playingcards::Deck
--
/+getAllCards(): List&lt;Card&gt;/
/+size(): Integer/
/+getNumCardsOfType(color: Card.Color)/
/+getNumCardsOfType(suit: Card.Suit)/
/+getNumCardsOfType(value: Card.Value)/
group=4</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>960</x>
      <y>410</y>
      <w>190</w>
      <h>95</h>
    </coordinates>
    <panel_attributes>libs.blackjack.src.garrettsmith.playingcards::StandardDeck
--
_cards: List&lt;Card&gt;
_+DECK: StandardDeck_
--
-&lt;&lt;constructor&gt;&gt;StandardDeck()
+getAllCards(): List&lt;Card&gt;
+size(): Integer
+toString(): String
+getNumCardsOfType(color: Color): Integer
+getNumCardsOfType(suit: Suit): Integer
+getNumCardsOfType(value: Value): Integer
group=4</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>660</x>
      <y>70</y>
      <w>220</w>
      <h>245</h>
    </coordinates>
    <panel_attributes>libs.blackjack.src.garrettsmith.blackjack::Blackjack
--
-_cards: CardContainer
-_dealerCards: CardList
-_rules: Rules
-_handsToPlay: ArrayList&lt;Hand&gt;
-_handsToEvaluate: ArrayList&lt;Hand&gt;
--
+&lt;&lt;constructor&gt;&gt;Blackjack()
+&lt;&lt;constructor&gt;&gt;Blackjack(rules: Rules)
_+calculateBestValue(cards: CardList): Integer_
_~cardsToString(cards: CardList): String_
_~cardToString(card: Card): String_
_+calculateValue(card: Card): Integer_
_+calculateValue(cards: CardList): Integer_
+getRules(): Rules
_+isNonAceFaceCard(card: Card): Boolean_
_+isBlackjack(cards: CardList): Boolean_
_+isSoft(cards: CardList): Boolean_
+playGame(handler: EventHndler, wager: Double)
+setRules(rules: Rules)
~getDealerCard(): Card
~getCard(): Card {throws NoMoreCardsException}
~setCards(cards: CardContainer)
-isDealerPlayNeeded(hands: ArrayList&lt;Hand&gt;): Boolean
-evaluateOutcome(dealerValue: Integer, handler: EventHandler)
-isBlackjack(hand: Hand, handler: EventHandler): Boolean
-offerEarlySurrender(hand: Hand, handler: EventHandler): Boolean
-dealInitialCards(wager: Double): Hand
-playDealerHand(): Integer
-playTurn(handler: EventHandler, hand: Hand)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>895</x>
      <y>70</y>
      <w>255</w>
      <h>215</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
libs.blackjack.src.garrettsmith.blackjack::Move
--
_+HIT: Move_
_+STAND: Move_
_+SURRENDER: Move_
_+DOUBLE: Move_
_+SPLIT: Move_
--
+value(): Integer
+execute(hand: Hand, handler: EventHandler, dealerCards: CardList)

{innerclass
&lt;&lt;abstract&gt;&gt;
BaseMove {implements Move}
--
/+value(): Integer/
+hashCode(): Integer
+equals(o: Object): Boolean
+execute(hand: Hand, handler: EventHandler, dealerCards: CardList): Hand
/#doMove(hand: Hand, handler: EventHandler, dealerCards: CardList): Hand
innerclass}
{innerclass
Hit {extends BaseMove}
innerclass}
{innerclass
Stand {extends BaseMove}
innerclass}
{innerclass
Surrender {extends BaseMove}
innerclass}
{innerclass
Double {extends BaseMove}
innerclass}
{innerclass
Split {extends BaseMove}
innerclass}</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1040</x>
      <y>365</y>
      <w>15</w>
      <h>55</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.
group=4</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>160</x>
      <y>30</y>
      <w>535</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>1050.0;80.0;1050.0;10.0;10.0;10.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>620</x>
      <y>85</y>
      <w>50</w>
      <h>95</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>10.0;170.0;10.0;10.0;80.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>405</x>
      <y>45</y>
      <w>270</w>
      <h>35</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>520.0;50.0;520.0;10.0;10.0;10.0;10.0;30.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>815</x>
      <y>50</y>
      <w>110</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>200.0;40.0;200.0;10.0;10.0;10.0;10.0;40.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>460</x>
      <y>100</y>
      <w>735</w>
      <h>515</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>10.0;1010.0;1450.0;1010.0;1450.0;10.0;1380.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>140</x>
      <y>750</y>
      <w>240</w>
      <h>75</h>
    </coordinates>
    <panel_attributes>ai.agents::CardCountingAgent
--
+&lt;&lt;constructor&gt;&gt;CardCountingAgent()
+playTurn(hand: Hand): Move
+gameEnd(hand: Hand, gain: Double, result: Result, dealerCards: CardList)
-firstTurn(hand: Hand)
-countCard(card: Card)
-countCard(value: Integer)
_#cardValue(card: Card): Integer_</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>385</x>
      <y>750</y>
      <w>240</w>
      <h>45</h>
    </coordinates>
    <panel_attributes>ai.agents::DealerLearningAgent
--
+&lt;&lt;constructor&gt;&gt;DealerLearningAgent()
+playTurn(hand: Hand): Move
+gameEnd(hand: Hand, gain: Double, result: Result, dealerCards: CardList)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>630</x>
      <y>750</y>
      <w>125</w>
      <h>45</h>
    </coordinates>
    <panel_attributes>ai.agents::SaveAgent
--
+&lt;&lt;constructor&gt;&gt;SaveAgent()
+playTurn(hand: Hand): Move
-evaluateHand(hand: Hand): Boolean</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>325</x>
      <y>725</y>
      <w>15</w>
      <h>35</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>10.0;50.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>325</x>
      <y>725</y>
      <w>200</w>
      <h>35</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>380.0;50.0;380.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>510</x>
      <y>725</y>
      <w>200</w>
      <h>35</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>380.0;50.0;380.0;10.0;10.0;10.0</additional_attributes>
  </element>
</diagram>
